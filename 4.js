(function () {
    "use strict";

    var custom_domains = ["cubs.hoprop.xyz", "cub.rip", "lampadev.ru", "cub.abmsx.tech"];
    var default_domain = "cub.red";
    var current_domain = localStorage.getItem("selected_domain") || custom_domains[0];

    function replaceDomain(url) {
        try {
            let parsedUrl = new URL(url);
            if ([default_domain, ...custom_domains].includes(parsedUrl.host)) {
                parsedUrl.host = current_domain; // –ú–µ–Ω—è–µ–º –¥–æ–º–µ–Ω –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
            }
            return parsedUrl.toString();
        } catch (e) {
            return url;
        }
    }

    // –ü–µ—Ä–µ—Ö–≤–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ fetch()
    var originalFetch = window.fetch;
    window.fetch = function (input, options) {
        if (typeof input === "string") {
            input = replaceDomain(input);
        } else if (input instanceof Request) {
            let newUrl = replaceDomain(input.url);
            input = new Request(newUrl, input); 
        }
        return originalFetch.apply(this, arguments);
    };

    var originalXMLHttpRequestOpen = XMLHttpRequest.prototype.open;
    XMLHttpRequest.prototype.open = function (method, url) {
        if (typeof url === "string") {
            arguments[1] = replaceDomain(url);
        }
        return originalXMLHttpRequestOpen.apply(this, arguments);
    };

    Lampa.Storage.listener.follow("open", function (e) {
        if (e.name === "tmdb") {
            e.body.find("[data-parent='proxy']").remove();
        }
    });

    function createDomainSwitcherButton() {
        var domainButton = $('<div>', {
            'class': 'head__action selector domain-switcher',
            'html': '<div class="source-logo" style="text-align: center; font-weight: bold;">üåê ' + current_domain + '</div>'
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –≤–µ—Ä—Ö–Ω—é—é –ø–∞–Ω–µ–ª—å
        $(".head__actions").prepend(domainButton);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–º–µ–Ω—ã –¥–æ–º–µ–Ω–∞
        domainButton.on("hover:enter", function () {
            Lampa.Select.show({
                title: "–í—ã–±–æ—Ä –¥–æ–º–µ–Ω–∞",
                items: custom_domains.map(domain => ({
                    title: domain,
                    domain: domain
                })),
                onSelect: function (selected) {
                    localStorage.setItem("selected_domain", selected.domain);
                    current_domain = selected.domain;
                    domainButton.find(".source-logo").text("üåê " + selected.domain);
                    Lampa.Noty.show("–î–æ–º–µ–Ω –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: " + selected.domain + "\n–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...");
                    setTimeout(function () {
                        location.reload();
                    }, 1000);
                }
            });
        });
    }

    function initPlugin() {
        if (window.plugin_domain_switcher_ready) return;
        window.plugin_domain_switcher_ready = true;

        if (window.appready) {
            createDomainSwitcherButton();
        } else {
            Lampa.Listener.follow("app", function (e) {
                if (e.type === "ready") createDomainSwitcherButton();
            });
        }
    }

    initPlugin();

    console.log("üöÄ Lampa Plugin Loaded: –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã –¥–æ–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–µ—Ä—Ö–Ω—é—é –ø–∞–Ω–µ–ª—å. –¢–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω:", current_domain);
})();
