(function () {
    var toggleKey = 'showbuttonwn';
    var settingsGroup = 'buttonfix';

    function renderButtons() {
        Lampa.Listener.follow('full', function (e) {
            if (e.type !== 'complite') return;

            setTimeout(function () {
                var fullContainer = e.object && e.object.activity && e.object.activity.render && e.object.activity.render();
                if (!fullContainer || !fullContainer.length) return;

                var targetContainer = fullContainer.find('.full-start-new__buttons');
                fullContainer.find('.button--play').remove();

                var allButtons = fullContainer.find('.buttons--container .full-start__button')
                    .add(targetContainer.find('.full-start__button'));

                var categories = {
                    online: [],
                    torrent: [],
                    trailer: [],
                    other: []
                };

                allButtons.each(function () {
                    var $btn = $(this);
                    var className = $btn.attr('class') || '';

                    if (className.indexOf('online') !== -1) {
                        categories.online.push($btn);
                    } else if (className.indexOf('torrent') !== -1) {
                        categories.torrent.push($btn);
                    } else if (className.indexOf('trailer') !== -1) {
                        categories.trailer.push($btn);
                    } else {
                        categories.other.push($btn.clone(true));
                    }
                });

                var buttonSortOrder = Lampa.Storage.get('lme_buttonsort') || ['torrent', 'online', 'trailer', 'other'];

                targetContainer.empty();
                for (var i = 0; i < buttonSortOrder.length; i++) {
                    var category = buttonSortOrder[i];
                    var buttons = categories[category] || [];
                    for (var j = 0; j < buttons.length; j++) {
                        targetContainer.append(buttons[j]);
                    }
                }

                // Apply toggle
                if (Lampa.Storage.get(toggleKey) === true) {
                    targetContainer.find('span').remove();
                }

                targetContainer.css({
                    display: 'flex',
                    flexWrap: 'wrap',
                    gap: '10px'
                });

                Lampa.Controller.toggle('full_start');
            }, 100);
        });
    }

    function addSettingsToggle() {
        Lampa.Settings.listener.follow('open', function (e) {
            if (e.name !== 'more') return;

            var toggleValue = Lampa.Storage.get(toggleKey) === true;

            Lampa.Settings.add({
                component: settingsGroup,
                name: 'Кнопки: скрыть текст',
                type: 'toggle',
                value: toggleValue,
                onchange: function (value) {
                    Lampa.Storage.set(toggleKey, value);
                }
            });
        });

        Lampa.Settings.group.add({
            title: 'Кнопки просмотра',
            component: settingsGroup
        });
    }

    function initPlugin() {
        renderButtons();
        addSettingsToggle();
    }

    initPlugin();
})();
